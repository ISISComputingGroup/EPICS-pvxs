# .appveyor.yml for use with EPICS Base ci-scripts
# (see: https://github.com/epics-base/ci-scripts)

# This is YAML - indentation levels are crucial

#---------------------------------#
#       repository cloning        #
#---------------------------------#

# Called at very beginning, before repo cloning
init:
  # Set autocrlf to make batch files work
  - git config --global core.autocrlf true

# Set clone depth (do not fetch complete history)
clone_depth: 50

# Skipping commits affecting only specific files
skip_commits:
  files:
    - 'documentation/*'
    - 'templates/*'
    - '**/*.html'
    - '**/*.md'

#---------------------------------#
#   build matrix configuration    #
#---------------------------------#

# Build Configurations: dll/static, regular/debug
configuration:
  - dynamic
  - static
  - dynamic-debug
  - static-debug

# Environment variables: compiler toolchain
environment:
  matrix:
  - CC: mingw
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    SETUP_PATH: .
  - CC: vs2019
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    SETUP_PATH: .
  - CC: vs2017
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    SETUP_PATH: .
  - CC: vs2015
    SETUP_PATH: .
  - CC: vs2013
    SETUP_PATH: .
  - CC: vs2012
    SETUP_PATH: .
  - CC: vs2010
    SETUP_PATH: .

# Platform: architecture
platform:
  - x86
  - x64

# Matrix configuration: allow specific failing jobs
matrix:
  exclude:
  # VS2010 Express installs don't have the 64 bit compiler
  - platform: x64
    CC: vs2010
  # Exclude to reduce total job runtime
  # skip 64-bit for older and 32-bit for newer
  - platform: x64
    CC: vs2012
  - platform: x86
    CC: mingw
  - platform: x86
    CC: vs2019
  - platform: x86
    CC: vs2017

#---------------------------------#
#     building & testing          #
#---------------------------------#

install:
  - cmd: git submodule update --init --recursive
  - cmd: python .ci-local/appveyor-libevent.py
  - cmd: python .ci/appveyor/do.py prepare

build_script:
  - cmd: python .ci/appveyor/do.py build

test_script:
  - cmd: python .ci/appveyor/do.py test

on_finish:
  - ps: Get-ChildItem *.tap -Recurse -Force | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

#---------------------------------#
#         debugging               #
#---------------------------------#

## if you want to connect by remote desktop to a failed build, uncomment these lines
## note that you will need to connect within the usual build timeout limit (60 minutes)
## so you may want to adjust the build matrix above to just build the one of interest

#on_failure:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:
  - provider: GitHubPullRequest
